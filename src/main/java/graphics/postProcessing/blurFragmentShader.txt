#version 400 core

in vec2 fragmentTextureCoordinates;

layout (location = 0) out vec4 fragmentColour;

uniform sampler2D textureSampler;

void main() {
          
    vec2 textureOffset = 1.0 / textureSize(textureSampler, 0); // gets size of single texel
    vec3 result = texture(textureSampler, fragmentTextureCoordinates).rgb * weight[0]; // current fragment's contribution
    if(horizontal)
    {
        for(int i = 1; i < 5; ++i)
        {
            result += texture(textureSampler, fragmentTextureCoordinates + vec2(textureOffset.x * i, 0.0)).rgb * weight[i];
            result += texture(textureSampler, fragmentTextureCoordinates - vec2(textureOffset.x * i, 0.0)).rgb * weight[i];
        }
    }
    else
    {
        for(int i = 1; i < 5; ++i)
        {
            result += texture(textureSampler, fragmentTextureCoordinates + vec2(0.0, textureOffset.y * i)).rgb * weight[i];
            result += texture(textureSampler, fragmentTextureCoordinates - vec2(0.0, textureOffset.y * i)).rgb * weight[i];
        }
    }
    fragmentColour = vec4(result, 1.0);
    
}